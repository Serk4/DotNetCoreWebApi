// <auto-generated />
using DotNetCoreWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCoreWebApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251017165937_InitialCreateFinal")]
    partial class InitialCreateFinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetCoreWebApi.Models.Amplification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Prop1")
                        .HasColumnType("int");

                    b.Property<int>("Prop2")
                        .HasColumnType("int");

                    b.Property<int>("WorksheetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorksheetId");

                    b.ToTable("Amplifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Prop1 = 5,
                            Prop2 = 10,
                            WorksheetId = 2
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.DnaProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("DnaProcesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            Name = "Extraction"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 1,
                            Name = "Amplification"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 1,
                            Name = "Quantification"
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Extraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Prop1")
                        .HasColumnType("int");

                    b.Property<int>("Prop2")
                        .HasColumnType("int");

                    b.Property<int>("WorksheetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorksheetId");

                    b.ToTable("Extractions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Prop1 = 2,
                            Prop2 = 4,
                            WorksheetId = 1
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Quantification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Prop1")
                        .HasColumnType("int");

                    b.Property<int>("Prop2")
                        .HasColumnType("int");

                    b.Property<int>("WorksheetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorksheetId");

                    b.ToTable("Quantifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Prop1 = 15,
                            Prop2 = 20,
                            WorksheetId = 3
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            UserName = "admin",
                            UserType = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "tech1@example.com",
                            UserName = "tech1",
                            UserType = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "tech2@example.com",
                            UserName = "tech2",
                            UserType = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "analyst1@example.com",
                            UserName = "analyst1",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Workflow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Workflows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            Name = "Default Workflow"
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.WorkflowGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            WorkflowId = 1
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.WorkflowProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DnaProcessId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessOrder")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DnaProcessId");

                    b.HasIndex("WorkflowId", "DnaProcessId")
                        .IsUnique();

                    b.ToTable("WorkflowProcesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DnaProcessId = 1,
                            ProcessOrder = 1,
                            WorkflowId = 1
                        },
                        new
                        {
                            Id = 2,
                            DnaProcessId = 2,
                            ProcessOrder = 2,
                            WorkflowId = 1
                        },
                        new
                        {
                            Id = 3,
                            DnaProcessId = 3,
                            ProcessOrder = 3,
                            WorkflowId = 1
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Worksheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalystId")
                        .HasColumnType("int");

                    b.Property<int>("DnaProcessId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AnalystId");

                    b.HasIndex("DnaProcessId");

                    b.ToTable("Worksheets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalystId = 4,
                            DnaProcessId = 1,
                            Name = "Process 1 Worksheet"
                        },
                        new
                        {
                            Id = 2,
                            AnalystId = 4,
                            DnaProcessId = 2,
                            Name = "Process 2 Worksheet"
                        },
                        new
                        {
                            Id = 3,
                            AnalystId = 4,
                            DnaProcessId = 3,
                            Name = "Process 3 Worksheet"
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.WorksheetWorkflowGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowGroupId")
                        .HasColumnType("int");

                    b.Property<int>("WorksheetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowGroupId");

                    b.HasIndex("WorksheetId", "WorkflowGroupId")
                        .IsUnique();

                    b.ToTable("WorksheetWorkflowGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StepOrder = 1,
                            WorkflowGroupId = 1,
                            WorksheetId = 1
                        },
                        new
                        {
                            Id = 2,
                            StepOrder = 2,
                            WorkflowGroupId = 1,
                            WorksheetId = 2
                        },
                        new
                        {
                            Id = 3,
                            StepOrder = 3,
                            WorkflowGroupId = 1,
                            WorksheetId = 3
                        });
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Amplification", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.Worksheet", "Worksheet")
                        .WithMany("Amplifications")
                        .HasForeignKey("WorksheetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Worksheet");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.DnaProcess", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.User", "CreatedByUser")
                        .WithMany("CreatedDnaProcesses")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Extraction", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.Worksheet", "Worksheet")
                        .WithMany("Extractions")
                        .HasForeignKey("WorksheetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Worksheet");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Quantification", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.Worksheet", "Worksheet")
                        .WithMany("Quantifications")
                        .HasForeignKey("WorksheetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Worksheet");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Workflow", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.User", "CreatedByUser")
                        .WithMany("CreatedWorkflows")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.WorkflowGroup", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.Workflow", "Workflow")
                        .WithMany("WorkflowGroups")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.WorkflowProcess", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.DnaProcess", "DnaProcess")
                        .WithMany("WorkflowProcesses")
                        .HasForeignKey("DnaProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetCoreWebApi.Models.Workflow", "Workflow")
                        .WithMany("WorkflowProcesses")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DnaProcess");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Worksheet", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.User", "Analyst")
                        .WithMany("AnalystWorksheets")
                        .HasForeignKey("AnalystId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DotNetCoreWebApi.Models.DnaProcess", "DnaProcess")
                        .WithMany("Worksheets")
                        .HasForeignKey("DnaProcessId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Analyst");

                    b.Navigation("DnaProcess");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.WorksheetWorkflowGroup", b =>
                {
                    b.HasOne("DotNetCoreWebApi.Models.WorkflowGroup", "WorkflowGroup")
                        .WithMany("WorksheetWorkflowGroups")
                        .HasForeignKey("WorkflowGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DotNetCoreWebApi.Models.Worksheet", "Worksheet")
                        .WithMany("WorksheetWorkflowGroups")
                        .HasForeignKey("WorksheetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkflowGroup");

                    b.Navigation("Worksheet");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.DnaProcess", b =>
                {
                    b.Navigation("WorkflowProcesses");

                    b.Navigation("Worksheets");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.User", b =>
                {
                    b.Navigation("AnalystWorksheets");

                    b.Navigation("CreatedDnaProcesses");

                    b.Navigation("CreatedWorkflows");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Workflow", b =>
                {
                    b.Navigation("WorkflowGroups");

                    b.Navigation("WorkflowProcesses");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.WorkflowGroup", b =>
                {
                    b.Navigation("WorksheetWorkflowGroups");
                });

            modelBuilder.Entity("DotNetCoreWebApi.Models.Worksheet", b =>
                {
                    b.Navigation("Amplifications");

                    b.Navigation("Extractions");

                    b.Navigation("Quantifications");

                    b.Navigation("WorksheetWorkflowGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
